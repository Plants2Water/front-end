{"ast":null,"code":"var _jsxFileName = \"/Users/pririmonteiro/Desktop/plants2water/front-end/src/components/Registration/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RegForm from './RegForm';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport schema from '../../validation/formSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: '',\n  first_name: '',\n  last_name: '',\n  password: '',\n  telephone: '',\n  email: ''\n};\nconst initialDisabled = true;\nexport default function Register() {\n  _s();\n\n  const [user, setUser] = useState(initialFormValues);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormValues);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const postNewUser = newUser => {\n    axios.post('https://bw-water-my-plants-01.herokuapp.com/api/auth/register', newUser).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        setUser(res.data);\n        console.log(\"res---\", res);\n      }\n    }).catch(err => console.error(err));\n    setFormValues(initialFormValues);\n  };\n\n  const validate = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => setFormErrors({ ...formErrors,\n      [name]: ''\n    })).catch(err => setFormErrors({ ...formErrors,\n      [name]: err.errors[0]\n    }));\n  };\n\n  const inputChange = (name, value) => {\n    validate(name, value);\n    setFormValues({ ...formValues,\n      [name]: value // NOT AN ARRAY\n\n    });\n  };\n\n  const formSubmit = () => {\n    const newUser = {\n      username: formValues.username.trim(),\n      first_name: formValues.first_name.trim(),\n      last_name: formValues.last_name.trim(),\n      password: formValues.password.trim(),\n      telephone: formValues.telephone.trim(),\n      email: formValues.email.trim()\n    };\n    postNewUser(newUser);\n  };\n\n  useEffect(() => {\n    postNewUser();\n  }, []);\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n\n  const Logout = () => {\n    setUser({\n      username: '',\n      password: ''\n    });\n    console.log(\"LogOut\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Landing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegForm, {\n      values: formValues,\n      change: inputChange,\n      submit: formSubmit,\n      disabled: disabled,\n      errors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"VAt7lWPFUTHZeTbAbvoGwrYA3YY=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/pririmonteiro/Desktop/plants2water/front-end/src/components/Registration/Register.js"],"names":["React","useState","useEffect","RegForm","axios","yup","schema","initialFormValues","username","first_name","last_name","password","telephone","email","initialDisabled","Register","user","setUser","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","postNewUser","newUser","post","then","res","status","data","console","log","catch","err","error","validate","name","value","reach","errors","inputChange","formSubmit","trim","isValid","valid","Logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RegForm from './RegForm';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport schema from '../../validation/formSchema';\n\n\n\n\nconst initialFormValues = {\n  username: '',\n  first_name: '',\n  last_name: '',\n  password: '',\n  telephone: '',\n  email: '',\n}\n\nconst initialDisabled = true\n\nexport default function Register() {\n  const [user, setUser] = useState(initialFormValues);\n  const [formValues, setFormValues] = useState(initialFormValues)\n  const [formErrors, setFormErrors] = useState(initialFormValues)\n  const [disabled, setDisabled] = useState(initialDisabled)\n\n\n  const postNewUser = newUser => {\n    axios.post('https://bw-water-my-plants-01.herokuapp.com/api/auth/register', newUser)\n        .then(res =>{\n          if (res.status >=200 && res.status<300){\n            setUser(res.data);\n            console.log(\"res---\", res);\n          }\n        }).catch(err => console.error(err));\n        setFormValues(initialFormValues);\n  }\n\n  const validate = (name, value) => {\n    yup.reach(schema, name)\n      .validate(value)\n      .then(() => setFormErrors({ ...formErrors, [name]: '' }))\n      .catch(err => setFormErrors({...formErrors, [name]: err.errors[0]})) \n  }\n  const inputChange = (name, value) => {\n    validate(name, value);\n    \n    setFormValues({\n      ...formValues,\n      [name]: value // NOT AN ARRAY\n    });\n  }\n\n\n  const formSubmit = () => {\n    const newUser = {\n      username: formValues.username.trim(),\n      first_name: formValues.first_name.trim(),\n      last_name: formValues.last_name.trim(),\n      password: formValues.password.trim(),\n      telephone: formValues.telephone.trim(),\n      email: formValues.email.trim(),\n    }\n    postNewUser(newUser);\n  }\n  useEffect(() => {\n    postNewUser()\n  }, [])\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => setDisabled(!valid))\n  }, [formValues])\n\n  \n\n  const Logout = () => {\n    setUser({ username: '', password:'' });\n    console.log(\"LogOut\");\n  }\n\n  return (\n    <div className=\"Landing\">\n      <div>\n        <h2>Welcome, <span>{user.username}</span></h2>\n        <button onClick={Logout}>Logout</button>\n      </div>\n    \n      <RegForm \n        values={formValues}\n        change={inputChange}\n        submit={formSubmit}\n        disabled={disabled}\n        errors={formErrors}\n      />\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}